#include<queue>

void push(stack<int>& s, int a){
	s.push(a);
}

bool isFull(stack<int>& s,int n){
	if(s.size()==n){
	    return true;
	}
	return false;
}

bool isEmpty(stack<int>& s){
	if(s.empty()){
	    return true;
	}
	return false;
}

int pop(stack<int>& s){
	s.pop();
}

int getMin(stack<int>& s){
    priority_queue<int,vector<int>,greater<int>>p;
    while(!s.empty()){
        p.push(s.top());
        s.pop();
    }
    int a= p.top();
    while(!p.empty()){
        s.push(p.top());
        p.pop();
    }
    return a;
}
